{"version":3,"sources":["assets\\scripts\\ces.ts"],"names":[],"mappings":";;;;AAGA,CAAC,CAAA;AAAC,SAAS,CAAA;AACX,IAAO,MAAM,GAAA,AACb,CADa;AACb,IAAO,QAAQ,GAAA,AACf,CADe;AACf,IAAO,IAAI,GAEX,CAAC,CAAA;AAAC,QAAQ,CAAA;AAAC,KAAK,CAAA;AAChB,MAAM,CAAC,OAAO,GAAG,cAAc,CAAA;AAE/B,CAAC,CAAA;AAAC,MAAM,CAAA;AAAC,SAAS,CAAA;AAAC,YAAY,CAAA;AAC/B,GAAG,CAAA;AAAC,iBAAiB,CAAC,MAAM,CAAC,CAAA;AACzB,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAC/B,MAAM,GAAC,SAAS,EAChB,MAAM,GAAC,MAAM,EACb,UAAU,GAAC,IAAI,EACf,CAAC,GAAC,CAAC,EACH,IAAI,GAAC,IAAI,EACT,WAAW,GAAC,GAAG,CAClB,CAAA;AACD,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;AAE3C,CAAC,CAAA;AAAC,MAAM,CAAA;AAAC,oBAAoB,CAAA;AAC7B,GAAG,CAAA;AAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA;AAC3B,GAAG,GAAG,6CAA6C,CAAA;AACnD,IAAI,GAAG;IACH,SAAS,EAAE,CAAC;IACZ,YAAY,EAAE;QACV,WAAW,EAAE;YACT,MAAM,EAAE,MAAM;SACjB;KACJ;IACD,UAAU,EAAE;QACR,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE,QAAQ;KACrB;CACJ,CAAA;AACD,OAAO,GAAG;IACN,cAAc,EAAE,kBAAkB;CACrC,CAAA;AACD,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,GAAC,OAAO,CAAC,CAAA;AACrE,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAA;AAE1D,CAAC,CAAA;AAAC,MAAM,CAAA;AAAC,QAAQ,CAAA;AACjB,GAAG,CAAA;AAAC,UAAU,EAAE,CAAA;AACZ,KAAK,CAAC,iBAAiB,CAAC,CAAA;AACxB,OAAM,IAAI;IAAA,EACN,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAA;AACpB,IAAG,MAAM,IAAI,IAAI;IAAA,EACb,KAAK,CAAC,gBAAgB,CAAC,CAAA;AACvB,MAAK;AACT,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAA;AACpC,IAAG,QAAQ,IAAI,EAAE;IAAA,EACb,QAAQ,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAA;AAC1C,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAA;AAEvC,CAAC,CAAA;AAAC,MAAM,CAAA;AACR,UAAU,EAAE,CAAA","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\n\r\n# 导入必要的库和模块\r\nimport openai\r\nimport requests\r\nimport json\r\n\r\n# 设置OpenAI API密钥\r\nopenai.api_key = \"YOUR_API_KEY\"\r\n\r\n# 定义一个函数，用于向OpenAI API发送请求并返回响应\r\ndef generate_response(prompt):\r\n    response = openai.Completion.create(\r\n        engine=\"davinci\",\r\n        prompt=prompt,\r\n        max_tokens=1024,\r\n        n=1,\r\n        stop=None,\r\n        temperature=0.5,\r\n    )\r\n    return response.choices[0].text.strip()\r\n\r\n# 定义一个函数，用于向图灵机器人API发送请求并返回响应\r\ndef get_tuling_response(prompt):\r\n    url = \"http://openapi.tuling123.com/openapi/api/v2\"\r\n    data = {\r\n        \"reqType\": 0,\r\n        \"perception\": {\r\n            \"inputText\": {\r\n                \"text\": prompt\r\n            }\r\n        },\r\n        \"userInfo\": {\r\n            \"apiKey\": \"YOUR_API_KEY\",\r\n            \"userId\": \"123456\"\r\n        }\r\n    }\r\n    headers = {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n    response = requests.post(url, data=json.dumps(data), headers=headers)\r\n    return response.json()[\"results\"][0][\"values\"][\"text\"]\r\n\r\n# 定义一个函数，用于启动聊天程序\r\ndef start_chat():\r\n    print(\"欢迎使用ChatGPT4.0！\")\r\n    while True:\r\n        prompt = input(\"你：\")\r\n        if prompt == \"退出\":\r\n            print(\"ChatGPT4.0已退出。\")\r\n            break\r\n        response = generate_response(prompt)\r\n        if response == \"\":\r\n            response = get_tuling_response(prompt)\r\n        print(\"ChatGPT4.0：\" + response)\r\n\r\n# 启动聊天程序\r\nstart_chat()\r\n\r\n\r\n\r\n"]}